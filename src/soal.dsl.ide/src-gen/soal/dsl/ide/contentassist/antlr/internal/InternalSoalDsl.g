/*
 * generated by Xtext 2.31.0
 */
grammar InternalSoalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package soal.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package soal.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import soal.dsl.services.SoalDslGrammarAccess;

}
@parser::members {
	private SoalDslGrammarAccess grammarAccess;

	public void setGrammarAccess(SoalDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSoalModel
entryRuleSoalModel
:
{ before(grammarAccess.getSoalModelRule()); }
	 ruleSoalModel
{ after(grammarAccess.getSoalModelRule()); } 
	 EOF 
;

// Rule SoalModel
ruleSoalModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSoalModelAccess().getGroup()); }
		(rule__SoalModel__Group__0)
		{ after(grammarAccess.getSoalModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration
:
{ before(grammarAccess.getEnumDeclarationRule()); }
	 ruleEnumDeclaration
{ after(grammarAccess.getEnumDeclarationRule()); } 
	 EOF 
;

// Rule EnumDeclaration
ruleEnumDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumDeclarationAccess().getGroup()); }
		(rule__EnumDeclaration__Group__0)
		{ after(grammarAccess.getEnumDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral
:
{ before(grammarAccess.getEnumLiteralRule()); }
	 ruleEnumLiteral
{ after(grammarAccess.getEnumLiteralRule()); } 
	 EOF 
;

// Rule EnumLiteral
ruleEnumLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralAccess().getNameAssignment()); }
		(rule__EnumLiteral__NameAssignment)
		{ after(grammarAccess.getEnumLiteralAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration
:
{ before(grammarAccess.getStructDeclarationRule()); }
	 ruleStructDeclaration
{ after(grammarAccess.getStructDeclarationRule()); } 
	 EOF 
;

// Rule StructDeclaration
ruleStructDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getGroup()); }
		(rule__StructDeclaration__Group__0)
		{ after(grammarAccess.getStructDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration
:
{ before(grammarAccess.getFieldDeclarationRule()); }
	 ruleFieldDeclaration
{ after(grammarAccess.getFieldDeclarationRule()); } 
	 EOF 
;

// Rule FieldDeclaration
ruleFieldDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getGroup()); }
		(rule__FieldDeclaration__Group__0)
		{ after(grammarAccess.getFieldDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
		(rule__InterfaceDeclaration__Group__0)
		{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResourceDeclaration
entryRuleResourceDeclaration
:
{ before(grammarAccess.getResourceDeclarationRule()); }
	 ruleResourceDeclaration
{ after(grammarAccess.getResourceDeclarationRule()); } 
	 EOF 
;

// Rule ResourceDeclaration
ruleResourceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceDeclarationAccess().getGroup()); }
		(rule__ResourceDeclaration__Group__0)
		{ after(grammarAccess.getResourceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDeclaration
entryRuleOperationDeclaration
:
{ before(grammarAccess.getOperationDeclarationRule()); }
	 ruleOperationDeclaration
{ after(grammarAccess.getOperationDeclarationRule()); } 
	 EOF 
;

// Rule OperationDeclaration
ruleOperationDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDeclarationAccess().getGroup()); }
		(rule__OperationDeclaration__Group__0)
		{ after(grammarAccess.getOperationDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputParameterList
entryRuleInputParameterList
:
{ before(grammarAccess.getInputParameterListRule()); }
	 ruleInputParameterList
{ after(grammarAccess.getInputParameterListRule()); } 
	 EOF 
;

// Rule InputParameterList
ruleInputParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputParameterListAccess().getGroup()); }
		(rule__InputParameterList__Group__0)
		{ after(grammarAccess.getInputParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputParameterList
entryRuleOutputParameterList
:
{ before(grammarAccess.getOutputParameterListRule()); }
	 ruleOutputParameterList
{ after(grammarAccess.getOutputParameterListRule()); } 
	 EOF 
;

// Rule OutputParameterList
ruleOutputParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputParameterListAccess().getAlternatives()); }
		(rule__OutputParameterList__Alternatives)
		{ after(grammarAccess.getOutputParameterListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleReturnParameter
entryRuleSingleReturnParameter
:
{ before(grammarAccess.getSingleReturnParameterRule()); }
	 ruleSingleReturnParameter
{ after(grammarAccess.getSingleReturnParameterRule()); } 
	 EOF 
;

// Rule SingleReturnParameter
ruleSingleReturnParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleReturnParameterAccess().getTypeReferenceAssignment()); }
		(rule__SingleReturnParameter__TypeReferenceAssignment)
		{ after(grammarAccess.getSingleReturnParameterAccess().getTypeReferenceAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleServiceDeclaration
entryRuleServiceDeclaration
:
{ before(grammarAccess.getServiceDeclarationRule()); }
	 ruleServiceDeclaration
{ after(grammarAccess.getServiceDeclarationRule()); } 
	 EOF 
;

// Rule ServiceDeclaration
ruleServiceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServiceDeclarationAccess().getGroup()); }
		(rule__ServiceDeclaration__Group__0)
		{ after(grammarAccess.getServiceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeReference
entryRuleTypeReference
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
		(rule__TypeReference__Alternatives)
		{ after(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getAlternatives()); }
		(rule__ArrayType__Alternatives)
		{ after(grammarAccess.getArrayTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullableType
entryRuleNullableType
:
{ before(grammarAccess.getNullableTypeRule()); }
	 ruleNullableType
{ after(grammarAccess.getNullableTypeRule()); } 
	 EOF 
;

// Rule NullableType
ruleNullableType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullableTypeAccess().getGroup()); }
		(rule__NullableType__Group__0)
		{ after(grammarAccess.getNullableTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleTypeReference
entryRuleSimpleTypeReference
:
{ before(grammarAccess.getSimpleTypeReferenceRule()); }
	 ruleSimpleTypeReference
{ after(grammarAccess.getSimpleTypeReferenceRule()); } 
	 EOF 
;

// Rule SimpleTypeReference
ruleSimpleTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleTypeReferenceAccess().getReferencedTypeAssignment()); }
		(rule__SimpleTypeReference__ReferencedTypeAssignment)
		{ after(grammarAccess.getSimpleTypeReferenceAccess().getReferencedTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleTypeName
entryRuleSimpleTypeName
:
{ before(grammarAccess.getSimpleTypeNameRule()); }
	 ruleSimpleTypeName
{ after(grammarAccess.getSimpleTypeNameRule()); } 
	 EOF 
;

// Rule SimpleTypeName
ruleSimpleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getAlternatives()); }
		(rule__SimpleTypeName__Alternatives)
		{ after(grammarAccess.getSimpleTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RestBindingKind
ruleRestBindingKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestBindingKindAccess().getRESTEnumLiteralDeclaration()); }
		('REST')
		{ after(grammarAccess.getRestBindingKindAccess().getRESTEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SoapBindingKind
ruleSoapBindingKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoapBindingKindAccess().getSOAPEnumLiteralDeclaration()); }
		('SOAP')
		{ after(grammarAccess.getSoapBindingKindAccess().getSOAPEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getEnumDeclarationParserRuleCall_0()); }
		ruleEnumDeclaration
		{ after(grammarAccess.getDeclarationAccess().getEnumDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getStructDeclarationParserRuleCall_1()); }
		ruleStructDeclaration
		{ after(grammarAccess.getDeclarationAccess().getStructDeclarationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getInterfaceDeclarationParserRuleCall_2()); }
		ruleInterfaceDeclaration
		{ after(grammarAccess.getDeclarationAccess().getInterfaceDeclarationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getServiceDeclarationParserRuleCall_3()); }
		ruleServiceDeclaration
		{ after(grammarAccess.getDeclarationAccess().getServiceDeclarationParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputParameterListAccess().getGroup_0()); }
		(rule__OutputParameterList__Group_0__0)
		{ after(grammarAccess.getOutputParameterListAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputParameterListAccess().getGroup_1()); }
		(rule__OutputParameterList__Group_1__0)
		{ after(grammarAccess.getOutputParameterListAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getOutputParameterListAccess().getGroup_2()); }
		(rule__OutputParameterList__Group_2__0)
		{ after(grammarAccess.getOutputParameterListAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__BindingAlternatives_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceDeclarationAccess().getBindingRestBindingKindEnumRuleCall_6_0_0()); }
		ruleRestBindingKind
		{ after(grammarAccess.getServiceDeclarationAccess().getBindingRestBindingKindEnumRuleCall_6_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getServiceDeclarationAccess().getBindingSoapBindingKindEnumRuleCall_6_0_1()); }
		ruleSoapBindingKind
		{ after(grammarAccess.getServiceDeclarationAccess().getBindingSoapBindingKindEnumRuleCall_6_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getArrayTypeParserRuleCall_0()); }
		ruleArrayType
		{ after(grammarAccess.getTypeReferenceAccess().getArrayTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeReferenceAccess().getNullableTypeParserRuleCall_1()); }
		ruleNullableType
		{ after(grammarAccess.getTypeReferenceAccess().getNullableTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeReferenceAccess().getSimpleTypeReferenceParserRuleCall_2()); }
		ruleSimpleTypeReference
		{ after(grammarAccess.getTypeReferenceAccess().getSimpleTypeReferenceParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup_0()); }
		(rule__ArrayType__Group_0__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup_1()); }
		(rule__ArrayType__Group_1__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getObjectKeyword_0()); }
		'object'
		{ after(grammarAccess.getSimpleTypeNameAccess().getObjectKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getBinaryKeyword_1()); }
		'binary'
		{ after(grammarAccess.getSimpleTypeNameAccess().getBinaryKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getBoolKeyword_2()); }
		'bool'
		{ after(grammarAccess.getSimpleTypeNameAccess().getBoolKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getStringKeyword_3()); }
		'string'
		{ after(grammarAccess.getSimpleTypeNameAccess().getStringKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getIntKeyword_4()); }
		'int'
		{ after(grammarAccess.getSimpleTypeNameAccess().getIntKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getLongKeyword_5()); }
		'long'
		{ after(grammarAccess.getSimpleTypeNameAccess().getLongKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getFloatKeyword_6()); }
		'float'
		{ after(grammarAccess.getSimpleTypeNameAccess().getFloatKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getDoubleKeyword_7()); }
		'double'
		{ after(grammarAccess.getSimpleTypeNameAccess().getDoubleKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getDateKeyword_8()); }
		'date'
		{ after(grammarAccess.getSimpleTypeNameAccess().getDateKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getTimeKeyword_9()); }
		'time'
		{ after(grammarAccess.getSimpleTypeNameAccess().getTimeKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getDatetimeKeyword_10()); }
		'datetime'
		{ after(grammarAccess.getSimpleTypeNameAccess().getDatetimeKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getDurationKeyword_11()); }
		'duration'
		{ after(grammarAccess.getSimpleTypeNameAccess().getDurationKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getQualifiedNameParserRuleCall_12()); }
		ruleQualifiedName
		{ after(grammarAccess.getSimpleTypeNameAccess().getQualifiedNameParserRuleCall_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoalModel__Group__0__Impl
	rule__SoalModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoalModelAccess().getDescriptionKeyword_0()); }
	'description'
	{ after(grammarAccess.getSoalModelAccess().getDescriptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoalModel__Group__1__Impl
	rule__SoalModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoalModelAccess().getNameAssignment_1()); }
	(rule__SoalModel__NameAssignment_1)
	{ after(grammarAccess.getSoalModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoalModel__Group__2__Impl
	rule__SoalModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoalModelAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getSoalModelAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoalModel__Group__3__Impl
	rule__SoalModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoalModelAccess().getGroup_3()); }
	(rule__SoalModel__Group_3__0)*
	{ after(grammarAccess.getSoalModelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoalModel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoalModelAccess().getDeclarationsAssignment_4()); }
	(rule__SoalModel__DeclarationsAssignment_4)*
	{ after(grammarAccess.getSoalModelAccess().getDeclarationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoalModel__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoalModel__Group_3__0__Impl
	rule__SoalModel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoalModelAccess().getImportKeyword_3_0()); }
	'import'
	{ after(grammarAccess.getSoalModelAccess().getImportKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoalModel__Group_3__1__Impl
	rule__SoalModel__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoalModelAccess().getImportsAssignment_3_1()); }
	(rule__SoalModel__ImportsAssignment_3_1)
	{ after(grammarAccess.getSoalModelAccess().getImportsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SoalModel__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSoalModelAccess().getSemicolonKeyword_3_2()); }
	';'
	{ after(grammarAccess.getSoalModelAccess().getSemicolonKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__0__Impl
	rule__EnumDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__1__Impl
	rule__EnumDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getNameAssignment_1()); }
	(rule__EnumDeclaration__NameAssignment_1)
	{ after(grammarAccess.getEnumDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__2__Impl
	rule__EnumDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__3__Impl
	rule__EnumDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getGroup_3()); }
	(rule__EnumDeclaration__Group_3__0)?
	{ after(grammarAccess.getEnumDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group_3__0__Impl
	rule__EnumDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getLiteralsAssignment_3_0()); }
	(rule__EnumDeclaration__LiteralsAssignment_3_0)
	{ after(grammarAccess.getEnumDeclarationAccess().getLiteralsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getGroup_3_1()); }
	(rule__EnumDeclaration__Group_3_1__0)*
	{ after(grammarAccess.getEnumDeclarationAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group_3_1__0__Impl
	rule__EnumDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getEnumDeclarationAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getLiteralsAssignment_3_1_1()); }
	(rule__EnumDeclaration__LiteralsAssignment_3_1_1)
	{ after(grammarAccess.getEnumDeclarationAccess().getLiteralsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__0__Impl
	rule__StructDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getStructKeyword_0()); }
	'struct'
	{ after(grammarAccess.getStructDeclarationAccess().getStructKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__1__Impl
	rule__StructDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getNameAssignment_1()); }
	(rule__StructDeclaration__NameAssignment_1)
	{ after(grammarAccess.getStructDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__2__Impl
	rule__StructDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getGroup_2()); }
	(rule__StructDeclaration__Group_2__0)?
	{ after(grammarAccess.getStructDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__3__Impl
	rule__StructDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__4__Impl
	rule__StructDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getFieldsAssignment_4()); }
	(rule__StructDeclaration__FieldsAssignment_4)*
	{ after(grammarAccess.getStructDeclarationAccess().getFieldsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2__0__Impl
	rule__StructDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getStructDeclarationAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getBaseTypeAssignment_2_1()); }
	(rule__StructDeclaration__BaseTypeAssignment_2_1)
	{ after(grammarAccess.getStructDeclarationAccess().getBaseTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group__0__Impl
	rule__FieldDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getTypeReferenceAssignment_0()); }
	(rule__FieldDeclaration__TypeReferenceAssignment_0)
	{ after(grammarAccess.getFieldDeclarationAccess().getTypeReferenceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group__1__Impl
	rule__FieldDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getNameAssignment_1()); }
	(rule__FieldDeclaration__NameAssignment_1)
	{ after(grammarAccess.getFieldDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__0__Impl
	rule__InterfaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__1__Impl
	rule__InterfaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_1()); }
	(rule__InterfaceDeclaration__NameAssignment_1)
	{ after(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__2__Impl
	rule__InterfaceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__3__Impl
	rule__InterfaceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getResourcesAssignment_3()); }
	(rule__InterfaceDeclaration__ResourcesAssignment_3)*
	{ after(grammarAccess.getInterfaceDeclarationAccess().getResourcesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__4__Impl
	rule__InterfaceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getOperationsAssignment_4()); }
	(rule__InterfaceDeclaration__OperationsAssignment_4)*
	{ after(grammarAccess.getInterfaceDeclarationAccess().getOperationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getInterfaceDeclarationAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group__0__Impl
	rule__ResourceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getReadonlyAssignment_0()); }
	(rule__ResourceDeclaration__ReadonlyAssignment_0)?
	{ after(grammarAccess.getResourceDeclarationAccess().getReadonlyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group__1__Impl
	rule__ResourceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getResourceKeyword_1()); }
	'resource'
	{ after(grammarAccess.getResourceDeclarationAccess().getResourceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group__2__Impl
	rule__ResourceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getEntityAssignment_2()); }
	(rule__ResourceDeclaration__EntityAssignment_2)
	{ after(grammarAccess.getResourceDeclarationAccess().getEntityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group__3__Impl
	rule__ResourceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getGroup_3()); }
	(rule__ResourceDeclaration__Group_3__0)?
	{ after(grammarAccess.getResourceDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group_3__0__Impl
	rule__ResourceDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getThrowsKeyword_3_0()); }
	'throws'
	{ after(grammarAccess.getResourceDeclarationAccess().getThrowsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group_3__1__Impl
	rule__ResourceDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getExceptionsAssignment_3_1()); }
	(rule__ResourceDeclaration__ExceptionsAssignment_3_1)
	{ after(grammarAccess.getResourceDeclarationAccess().getExceptionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getGroup_3_2()); }
	(rule__ResourceDeclaration__Group_3_2__0)*
	{ after(grammarAccess.getResourceDeclarationAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceDeclaration__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group_3_2__0__Impl
	rule__ResourceDeclaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getResourceDeclarationAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceDeclaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceDeclarationAccess().getExceptionsAssignment_3_2_1()); }
	(rule__ResourceDeclaration__ExceptionsAssignment_3_2_1)
	{ after(grammarAccess.getResourceDeclarationAccess().getExceptionsAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group__0__Impl
	rule__OperationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getAsyncAssignment_0()); }
	(rule__OperationDeclaration__AsyncAssignment_0)?
	{ after(grammarAccess.getOperationDeclarationAccess().getAsyncAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group__1__Impl
	rule__OperationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getResponseParametersAssignment_1()); }
	(rule__OperationDeclaration__ResponseParametersAssignment_1)
	{ after(grammarAccess.getOperationDeclarationAccess().getResponseParametersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group__2__Impl
	rule__OperationDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getNameAssignment_2()); }
	(rule__OperationDeclaration__NameAssignment_2)
	{ after(grammarAccess.getOperationDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group__3__Impl
	rule__OperationDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getRequestParametersAssignment_3()); }
	(rule__OperationDeclaration__RequestParametersAssignment_3)
	{ after(grammarAccess.getOperationDeclarationAccess().getRequestParametersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group__4__Impl
	rule__OperationDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getGroup_4()); }
	(rule__OperationDeclaration__Group_4__0)?
	{ after(grammarAccess.getOperationDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getOperationDeclarationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group_4__0__Impl
	rule__OperationDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getThrowsKeyword_4_0()); }
	'throws'
	{ after(grammarAccess.getOperationDeclarationAccess().getThrowsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group_4__1__Impl
	rule__OperationDeclaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getExceptionsAssignment_4_1()); }
	(rule__OperationDeclaration__ExceptionsAssignment_4_1)
	{ after(grammarAccess.getOperationDeclarationAccess().getExceptionsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getGroup_4_2()); }
	(rule__OperationDeclaration__Group_4_2__0)*
	{ after(grammarAccess.getOperationDeclarationAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group_4_2__0__Impl
	rule__OperationDeclaration__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getOperationDeclarationAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDeclaration__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDeclarationAccess().getExceptionsAssignment_4_2_1()); }
	(rule__OperationDeclaration__ExceptionsAssignment_4_2_1)
	{ after(grammarAccess.getOperationDeclarationAccess().getExceptionsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParameterList__Group__0__Impl
	rule__InputParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParameterListAccess().getParameterListAction_0()); }
	()
	{ after(grammarAccess.getInputParameterListAccess().getParameterListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParameterList__Group__1__Impl
	rule__InputParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParameterListAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInputParameterListAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParameterList__Group__2__Impl
	rule__InputParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParameterListAccess().getGroup_2()); }
	(rule__InputParameterList__Group_2__0)?
	{ after(grammarAccess.getInputParameterListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParameterList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParameterListAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getInputParameterListAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputParameterList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParameterList__Group_2__0__Impl
	rule__InputParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParameterListAccess().getParametersAssignment_2_0()); }
	(rule__InputParameterList__ParametersAssignment_2_0)
	{ after(grammarAccess.getInputParameterListAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParameterListAccess().getGroup_2_1()); }
	(rule__InputParameterList__Group_2_1__0)*
	{ after(grammarAccess.getInputParameterListAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputParameterList__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParameterList__Group_2_1__0__Impl
	rule__InputParameterList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParameterListAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getInputParameterListAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputParameterList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputParameterListAccess().getParametersAssignment_2_1_1()); }
	(rule__InputParameterList__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getInputParameterListAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputParameterList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_0__0__Impl
	rule__OutputParameterList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getParameterListAction_0_0()); }
	()
	{ after(grammarAccess.getOutputParameterListAccess().getParameterListAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getVoidKeyword_0_1()); }
	'void'
	{ after(grammarAccess.getOutputParameterListAccess().getVoidKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_1__0__Impl
	rule__OutputParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getParameterListAction_1_0()); }
	()
	{ after(grammarAccess.getOutputParameterListAccess().getParameterListAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getParametersAssignment_1_1()); }
	(rule__OutputParameterList__ParametersAssignment_1_1)
	{ after(grammarAccess.getOutputParameterListAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputParameterList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_2__0__Impl
	rule__OutputParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getOutputParameterListAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_2__1__Impl
	rule__OutputParameterList__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getParametersAssignment_2_1()); }
	(rule__OutputParameterList__ParametersAssignment_2_1)
	{ after(grammarAccess.getOutputParameterListAccess().getParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_2__2__Impl
	rule__OutputParameterList__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getGroup_2_2()); }
	(rule__OutputParameterList__Group_2_2__0)*
	{ after(grammarAccess.getOutputParameterListAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getOutputParameterListAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputParameterList__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_2_2__0__Impl
	rule__OutputParameterList__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getOutputParameterListAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputParameterList__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputParameterListAccess().getParametersAssignment_2_2_1()); }
	(rule__OutputParameterList__ParametersAssignment_2_2_1)
	{ after(grammarAccess.getOutputParameterListAccess().getParametersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeReferenceAssignment_0()); }
	(rule__Parameter__TypeReferenceAssignment_0)
	{ after(grammarAccess.getParameterAccess().getTypeReferenceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ServiceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__0__Impl
	rule__ServiceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getServiceKeyword_0()); }
	'service'
	{ after(grammarAccess.getServiceDeclarationAccess().getServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__1__Impl
	rule__ServiceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getNameAssignment_1()); }
	(rule__ServiceDeclaration__NameAssignment_1)
	{ after(grammarAccess.getServiceDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__2__Impl
	rule__ServiceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getServiceDeclarationAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__3__Impl
	rule__ServiceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getInterfaceAssignment_3()); }
	(rule__ServiceDeclaration__InterfaceAssignment_3)
	{ after(grammarAccess.getServiceDeclarationAccess().getInterfaceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__4__Impl
	rule__ServiceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getServiceDeclarationAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__5__Impl
	rule__ServiceDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getBindingKeyword_5()); }
	'binding'
	{ after(grammarAccess.getServiceDeclarationAccess().getBindingKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__6__Impl
	rule__ServiceDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getBindingAssignment_6()); }
	(rule__ServiceDeclaration__BindingAssignment_6)
	{ after(grammarAccess.getServiceDeclarationAccess().getBindingAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__7__Impl
	rule__ServiceDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getServiceDeclarationAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServiceDeclaration__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServiceDeclarationAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getServiceDeclarationAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__0__Impl
	rule__ArrayType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getReferenceArrayTypeAction_0_0()); }
	()
	{ after(grammarAccess.getArrayTypeAccess().getReferenceArrayTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__1__Impl
	rule__ArrayType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getInnerTypeAssignment_0_1()); }
	(rule__ArrayType__InnerTypeAssignment_0_1)
	{ after(grammarAccess.getArrayTypeAccess().getInnerTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__2__Impl
	rule__ArrayType__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0_2()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_0_3()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__0__Impl
	rule__ArrayType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getContainmentArrayTypeAction_1_0()); }
	()
	{ after(grammarAccess.getArrayTypeAccess().getContainmentArrayTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__1__Impl
	rule__ArrayType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getInnerTypeAssignment_1_1()); }
	(rule__ArrayType__InnerTypeAssignment_1_1)
	{ after(grammarAccess.getArrayTypeAccess().getInnerTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__2__Impl
	rule__ArrayType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1_2()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullableType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullableType__Group__0__Impl
	rule__NullableType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullableType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullableTypeAccess().getInnerTypeAssignment_0()); }
	(rule__NullableType__InnerTypeAssignment_0)
	{ after(grammarAccess.getNullableTypeAccess().getInnerTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullableType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullableType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullableType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullableTypeAccess().getQuestionMarkKeyword_1()); }
	'?'
	{ after(grammarAccess.getNullableTypeAccess().getQuestionMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SoalModel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoalModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSoalModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__ImportsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoalModelAccess().getImportsSoalModelCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getSoalModelAccess().getImportsSoalModelSTRINGTerminalRuleCall_3_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getSoalModelAccess().getImportsSoalModelSTRINGTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getSoalModelAccess().getImportsSoalModelCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SoalModel__DeclarationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSoalModelAccess().getDeclarationsDeclarationParserRuleCall_4_0()); }
		ruleDeclaration
		{ after(grammarAccess.getSoalModelAccess().getDeclarationsDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__LiteralsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclarationAccess().getLiteralsEnumLiteralParserRuleCall_3_0_0()); }
		ruleEnumLiteral
		{ after(grammarAccess.getEnumDeclarationAccess().getLiteralsEnumLiteralParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__LiteralsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclarationAccess().getLiteralsEnumLiteralParserRuleCall_3_1_1_0()); }
		ruleEnumLiteral
		{ after(grammarAccess.getEnumDeclarationAccess().getLiteralsEnumLiteralParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__BaseTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getBaseTypeStructTypeCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getStructDeclarationAccess().getBaseTypeStructTypeIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStructDeclarationAccess().getBaseTypeStructTypeIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getStructDeclarationAccess().getBaseTypeStructTypeCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__FieldsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getFieldsFieldDeclarationParserRuleCall_4_0()); }
		ruleFieldDeclaration
		{ after(grammarAccess.getStructDeclarationAccess().getFieldsFieldDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__TypeReferenceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getTypeReferenceTypeReferenceParserRuleCall_0_0()); }
		ruleTypeReference
		{ after(grammarAccess.getFieldDeclarationAccess().getTypeReferenceTypeReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInterfaceDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__ResourcesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getResourcesResourceDeclarationParserRuleCall_3_0()); }
		ruleResourceDeclaration
		{ after(grammarAccess.getInterfaceDeclarationAccess().getResourcesResourceDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__OperationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getOperationsOperationDeclarationParserRuleCall_4_0()); }
		ruleOperationDeclaration
		{ after(grammarAccess.getInterfaceDeclarationAccess().getOperationsOperationDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__ReadonlyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceDeclarationAccess().getReadonlyReadonlyKeyword_0_0()); }
		(
			{ before(grammarAccess.getResourceDeclarationAccess().getReadonlyReadonlyKeyword_0_0()); }
			'readonly'
			{ after(grammarAccess.getResourceDeclarationAccess().getReadonlyReadonlyKeyword_0_0()); }
		)
		{ after(grammarAccess.getResourceDeclarationAccess().getReadonlyReadonlyKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__EntityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceDeclarationAccess().getEntityStructTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getResourceDeclarationAccess().getEntityStructTypeIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getResourceDeclarationAccess().getEntityStructTypeIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getResourceDeclarationAccess().getEntityStructTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__ExceptionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceDeclaration__ExceptionsAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeCrossReference_3_2_1_0()); }
		(
			{ before(grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeIDTerminalRuleCall_3_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeIDTerminalRuleCall_3_2_1_0_1()); }
		)
		{ after(grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeCrossReference_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__AsyncAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDeclarationAccess().getAsyncAsyncKeyword_0_0()); }
		(
			{ before(grammarAccess.getOperationDeclarationAccess().getAsyncAsyncKeyword_0_0()); }
			'async'
			{ after(grammarAccess.getOperationDeclarationAccess().getAsyncAsyncKeyword_0_0()); }
		)
		{ after(grammarAccess.getOperationDeclarationAccess().getAsyncAsyncKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__ResponseParametersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDeclarationAccess().getResponseParametersOutputParameterListParserRuleCall_1_0()); }
		ruleOutputParameterList
		{ after(grammarAccess.getOperationDeclarationAccess().getResponseParametersOutputParameterListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__RequestParametersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDeclarationAccess().getRequestParametersInputParameterListParserRuleCall_3_0()); }
		ruleInputParameterList
		{ after(grammarAccess.getOperationDeclarationAccess().getRequestParametersInputParameterListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__ExceptionsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__ExceptionsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeIDTerminalRuleCall_4_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeIDTerminalRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputParameterListAccess().getParametersParameterParserRuleCall_2_0_0()); }
		ruleParameter
		{ after(grammarAccess.getInputParameterListAccess().getParametersParameterParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputParameterList__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputParameterListAccess().getParametersParameterParserRuleCall_2_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getInputParameterListAccess().getParametersParameterParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputParameterListAccess().getParametersSingleReturnParameterParserRuleCall_1_1_0()); }
		ruleSingleReturnParameter
		{ after(grammarAccess.getOutputParameterListAccess().getParametersSingleReturnParameterParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__ParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputParameterListAccess().getParametersParameterParserRuleCall_2_1_0()); }
		ruleParameter
		{ after(grammarAccess.getOutputParameterListAccess().getParametersParameterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputParameterList__ParametersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputParameterListAccess().getParametersParameterParserRuleCall_2_2_1_0()); }
		ruleParameter
		{ after(grammarAccess.getOutputParameterListAccess().getParametersParameterParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeReferenceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeReferenceTypeReferenceParserRuleCall_0_0()); }
		ruleTypeReference
		{ after(grammarAccess.getParameterAccess().getTypeReferenceTypeReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleReturnParameter__TypeReferenceAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleReturnParameterAccess().getTypeReferenceTypeReferenceParserRuleCall_0()); }
		ruleTypeReference
		{ after(grammarAccess.getSingleReturnParameterAccess().getTypeReferenceTypeReferenceParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getServiceDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__InterfaceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceDeclarationAccess().getInterfaceInterfaceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getServiceDeclarationAccess().getInterfaceInterfaceIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getServiceDeclarationAccess().getInterfaceInterfaceIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getServiceDeclarationAccess().getInterfaceInterfaceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceDeclaration__BindingAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServiceDeclarationAccess().getBindingAlternatives_6_0()); }
		(rule__ServiceDeclaration__BindingAlternatives_6_0)
		{ after(grammarAccess.getServiceDeclarationAccess().getBindingAlternatives_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__InnerTypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getInnerTypeTypeCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getArrayTypeAccess().getInnerTypeTypeSimpleTypeNameParserRuleCall_0_1_0_1()); }
			ruleSimpleTypeName
			{ after(grammarAccess.getArrayTypeAccess().getInnerTypeTypeSimpleTypeNameParserRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getArrayTypeAccess().getInnerTypeTypeCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__InnerTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getInnerTypeNullableTypeParserRuleCall_1_1_0()); }
		ruleNullableType
		{ after(grammarAccess.getArrayTypeAccess().getInnerTypeNullableTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullableType__InnerTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullableTypeAccess().getInnerTypeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getNullableTypeAccess().getInnerTypeTypeSimpleTypeNameParserRuleCall_0_0_1()); }
			ruleSimpleTypeName
			{ after(grammarAccess.getNullableTypeAccess().getInnerTypeTypeSimpleTypeNameParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getNullableTypeAccess().getInnerTypeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleTypeReference__ReferencedTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeReferenceAccess().getReferencedTypeTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getSimpleTypeReferenceAccess().getReferencedTypeTypeSimpleTypeNameParserRuleCall_0_1()); }
			ruleSimpleTypeName
			{ after(grammarAccess.getSimpleTypeReferenceAccess().getReferencedTypeTypeSimpleTypeNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSimpleTypeReferenceAccess().getReferencedTypeTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
