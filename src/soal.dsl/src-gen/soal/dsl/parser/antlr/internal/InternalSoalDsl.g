/*
 * generated by Xtext 2.31.0
 */
grammar InternalSoalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package soal.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package soal.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import soal.dsl.services.SoalDslGrammarAccess;

}

@parser::members {

 	private SoalDslGrammarAccess grammarAccess;

    public InternalSoalDslParser(TokenStream input, SoalDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SoalModel";
   	}

   	@Override
   	protected SoalDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSoalModel
entryRuleSoalModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSoalModelRule()); }
	iv_ruleSoalModel=ruleSoalModel
	{ $current=$iv_ruleSoalModel.current; }
	EOF;

// Rule SoalModel
ruleSoalModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='description'
		{
			newLeafNode(otherlv_0, grammarAccess.getSoalModelAccess().getDescriptionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSoalModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSoalModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getSoalModelAccess().getSemicolonKeyword_2());
		}
		(
			otherlv_3='import'
			{
				newLeafNode(otherlv_3, grammarAccess.getSoalModelAccess().getImportKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSoalModelRule());
						}
					}
					otherlv_4=RULE_STRING
					{
						newLeafNode(otherlv_4, grammarAccess.getSoalModelAccess().getImportsSoalModelCrossReference_3_1_0());
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getSoalModelAccess().getSemicolonKeyword_3_2());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSoalModelAccess().getDeclarationsDeclarationParserRuleCall_4_0());
				}
				lv_declarations_6_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSoalModelRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_6_0,
						"soal.dsl.SoalDsl.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getEnumDeclarationParserRuleCall_0());
		}
		this_EnumDeclaration_0=ruleEnumDeclaration
		{
			$current = $this_EnumDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getStructDeclarationParserRuleCall_1());
		}
		this_StructDeclaration_1=ruleStructDeclaration
		{
			$current = $this_StructDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getInterfaceDeclarationParserRuleCall_2());
		}
		this_InterfaceDeclaration_2=ruleInterfaceDeclaration
		{
			$current = $this_InterfaceDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getServiceDeclarationParserRuleCall_3());
		}
		this_ServiceDeclaration_3=ruleServiceDeclaration
		{
			$current = $this_ServiceDeclaration_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDeclarationRule()); }
	iv_ruleEnumDeclaration=ruleEnumDeclaration
	{ $current=$iv_ruleEnumDeclaration.current; }
	EOF;

// Rule EnumDeclaration
ruleEnumDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumDeclarationAccess().getLiteralsEnumLiteralParserRuleCall_3_0_0());
					}
					lv_literals_3_0=ruleEnumLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
						}
						add(
							$current,
							"literals",
							lv_literals_3_0,
							"soal.dsl.SoalDsl.EnumLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getEnumDeclarationAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEnumDeclarationAccess().getLiteralsEnumLiteralParserRuleCall_3_1_1_0());
						}
						lv_literals_5_0=ruleEnumLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
							}
							add(
								$current,
								"literals",
								lv_literals_5_0,
								"soal.dsl.SoalDsl.EnumLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumLiteralRule()); }
	iv_ruleEnumLiteral=ruleEnumLiteral
	{ $current=$iv_ruleEnumLiteral.current; }
	EOF;

// Rule EnumLiteral
ruleEnumLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructDeclarationRule()); }
	iv_ruleStructDeclaration=ruleStructDeclaration
	{ $current=$iv_ruleStructDeclaration.current; }
	EOF;

// Rule StructDeclaration
ruleStructDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='struct'
		{
			newLeafNode(otherlv_0, grammarAccess.getStructDeclarationAccess().getStructKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getStructDeclarationAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStructDeclarationRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getStructDeclarationAccess().getBaseTypeStructTypeCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStructDeclarationAccess().getFieldsFieldDeclarationParserRuleCall_4_0());
				}
				lv_fields_5_0=ruleFieldDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
					}
					add(
						$current,
						"fields",
						lv_fields_5_0,
						"soal.dsl.SoalDsl.FieldDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldDeclarationRule()); }
	iv_ruleFieldDeclaration=ruleFieldDeclaration
	{ $current=$iv_ruleFieldDeclaration.current; }
	EOF;

// Rule FieldDeclaration
ruleFieldDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDeclarationAccess().getTypeReferenceTypeReferenceParserRuleCall_0_0());
				}
				lv_typeReference_0_0=ruleTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDeclarationRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_0_0,
						"soal.dsl.SoalDsl.TypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFieldDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceDeclarationRule()); }
	iv_ruleInterfaceDeclaration=ruleInterfaceDeclaration
	{ $current=$iv_ruleInterfaceDeclaration.current; }
	EOF;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='interface'
		{
			newLeafNode(otherlv_0, grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInterfaceDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getResourcesResourceDeclarationParserRuleCall_3_0());
				}
				lv_resources_3_0=ruleResourceDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					add(
						$current,
						"resources",
						lv_resources_3_0,
						"soal.dsl.SoalDsl.ResourceDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getOperationsOperationDeclarationParserRuleCall_4_0());
				}
				lv_operations_4_0=ruleOperationDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					add(
						$current,
						"operations",
						lv_operations_4_0,
						"soal.dsl.SoalDsl.OperationDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getInterfaceDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleResourceDeclaration
entryRuleResourceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceDeclarationRule()); }
	iv_ruleResourceDeclaration=ruleResourceDeclaration
	{ $current=$iv_ruleResourceDeclaration.current; }
	EOF;

// Rule ResourceDeclaration
ruleResourceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_readonly_0_0='readonly'
				{
					newLeafNode(lv_readonly_0_0, grammarAccess.getResourceDeclarationAccess().getReadonlyReadonlyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceDeclarationRule());
					}
					setWithLastConsumed($current, "readonly", lv_readonly_0_0 != null, "readonly");
				}
			)
		)?
		otherlv_1='resource'
		{
			newLeafNode(otherlv_1, grammarAccess.getResourceDeclarationAccess().getResourceKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceDeclarationRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getResourceDeclarationAccess().getEntityStructTypeCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3='throws'
			{
				newLeafNode(otherlv_3, grammarAccess.getResourceDeclarationAccess().getThrowsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getResourceDeclarationRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeCrossReference_3_1_0());
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getResourceDeclarationAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getResourceDeclarationRule());
							}
						}
						otherlv_6=RULE_ID
						{
							newLeafNode(otherlv_6, grammarAccess.getResourceDeclarationAccess().getExceptionsStructTypeCrossReference_3_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleOperationDeclaration
entryRuleOperationDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDeclarationRule()); }
	iv_ruleOperationDeclaration=ruleOperationDeclaration
	{ $current=$iv_ruleOperationDeclaration.current; }
	EOF;

// Rule OperationDeclaration
ruleOperationDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_async_0_0='async'
				{
					newLeafNode(lv_async_0_0, grammarAccess.getOperationDeclarationAccess().getAsyncAsyncKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationDeclarationRule());
					}
					setWithLastConsumed($current, "async", lv_async_0_0 != null, "async");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDeclarationAccess().getResponseParametersOutputParameterListParserRuleCall_1_0());
				}
				lv_responseParameters_1_0=ruleOutputParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDeclarationRule());
					}
					set(
						$current,
						"responseParameters",
						lv_responseParameters_1_0,
						"soal.dsl.SoalDsl.OutputParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOperationDeclarationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDeclarationAccess().getRequestParametersInputParameterListParserRuleCall_3_0());
				}
				lv_requestParameters_3_0=ruleInputParameterList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDeclarationRule());
					}
					set(
						$current,
						"requestParameters",
						lv_requestParameters_3_0,
						"soal.dsl.SoalDsl.InputParameterList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='throws'
			{
				newLeafNode(otherlv_4, grammarAccess.getOperationDeclarationAccess().getThrowsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationDeclarationRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeCrossReference_4_1_0());
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getOperationDeclarationAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOperationDeclarationRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getOperationDeclarationAccess().getExceptionsStructTypeCrossReference_4_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getOperationDeclarationAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleInputParameterList
entryRuleInputParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputParameterListRule()); }
	iv_ruleInputParameterList=ruleInputParameterList
	{ $current=$iv_ruleInputParameterList.current; }
	EOF;

// Rule InputParameterList
ruleInputParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInputParameterListAccess().getParameterListAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getInputParameterListAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInputParameterListAccess().getParametersParameterParserRuleCall_2_0_0());
					}
					lv_parameters_2_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputParameterListRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"soal.dsl.SoalDsl.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getInputParameterListAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInputParameterListAccess().getParametersParameterParserRuleCall_2_1_1_0());
						}
						lv_parameters_4_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputParameterListRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"soal.dsl.SoalDsl.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getInputParameterListAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleOutputParameterList
entryRuleOutputParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputParameterListRule()); }
	iv_ruleOutputParameterList=ruleOutputParameterList
	{ $current=$iv_ruleOutputParameterList.current; }
	EOF;

// Rule OutputParameterList
ruleOutputParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputParameterListAccess().getParameterListAction_0_0(),
						$current);
				}
			)
			otherlv_1='void'
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputParameterListAccess().getVoidKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputParameterListAccess().getParameterListAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputParameterListAccess().getParametersSingleReturnParameterParserRuleCall_1_1_0());
					}
					lv_parameters_3_0=ruleSingleReturnParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputParameterListRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"soal.dsl.SoalDsl.SingleReturnParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getOutputParameterListAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputParameterListAccess().getParametersParameterParserRuleCall_2_1_0());
					}
					lv_parameters_5_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputParameterListRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_5_0,
							"soal.dsl.SoalDsl.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getOutputParameterListAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOutputParameterListAccess().getParametersParameterParserRuleCall_2_2_1_0());
						}
						lv_parameters_7_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOutputParameterListRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_7_0,
								"soal.dsl.SoalDsl.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getOutputParameterListAccess().getRightParenthesisKeyword_2_3());
			}
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeReferenceTypeReferenceParserRuleCall_0_0());
				}
				lv_typeReference_0_0=ruleTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_0_0,
						"soal.dsl.SoalDsl.TypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSingleReturnParameter
entryRuleSingleReturnParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleReturnParameterRule()); }
	iv_ruleSingleReturnParameter=ruleSingleReturnParameter
	{ $current=$iv_ruleSingleReturnParameter.current; }
	EOF;

// Rule SingleReturnParameter
ruleSingleReturnParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSingleReturnParameterAccess().getTypeReferenceTypeReferenceParserRuleCall_0());
			}
			lv_typeReference_0_0=ruleTypeReference
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSingleReturnParameterRule());
				}
				set(
					$current,
					"typeReference",
					lv_typeReference_0_0,
					"soal.dsl.SoalDsl.TypeReference");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleServiceDeclaration
entryRuleServiceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceDeclarationRule()); }
	iv_ruleServiceDeclaration=ruleServiceDeclaration
	{ $current=$iv_ruleServiceDeclaration.current; }
	EOF;

// Rule ServiceDeclaration
ruleServiceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceDeclarationAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceDeclarationAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceDeclarationRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getServiceDeclarationAccess().getInterfaceInterfaceCrossReference_3_0());
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getServiceDeclarationAccess().getLeftCurlyBracketKeyword_4());
		}
		otherlv_5='binding'
		{
			newLeafNode(otherlv_5, grammarAccess.getServiceDeclarationAccess().getBindingKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceDeclarationAccess().getBindingRestBindingKindEnumRuleCall_6_0_0());
					}
					lv_binding_6_1=ruleRestBindingKind
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceDeclarationRule());
						}
						set(
							$current,
							"binding",
							lv_binding_6_1,
							"soal.dsl.SoalDsl.RestBindingKind");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getServiceDeclarationAccess().getBindingSoapBindingKindEnumRuleCall_6_0_1());
					}
					lv_binding_6_2=ruleSoapBindingKind
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceDeclarationRule());
						}
						set(
							$current,
							"binding",
							lv_binding_6_2,
							"soal.dsl.SoalDsl.SoapBindingKind");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getServiceDeclarationAccess().getSemicolonKeyword_7());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getServiceDeclarationAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeReferenceAccess().getArrayTypeParserRuleCall_0());
		}
		this_ArrayType_0=ruleArrayType
		{
			$current = $this_ArrayType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeReferenceAccess().getNullableTypeParserRuleCall_1());
		}
		this_NullableType_1=ruleNullableType
		{
			$current = $this_NullableType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeReferenceAccess().getSimpleTypeReferenceParserRuleCall_2());
		}
		this_SimpleTypeReference_2=ruleSimpleTypeReference
		{
			$current = $this_SimpleTypeReference_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArrayType
entryRuleArrayType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	iv_ruleArrayType=ruleArrayType
	{ $current=$iv_ruleArrayType.current; }
	EOF;

// Rule ArrayType
ruleArrayType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArrayTypeAccess().getReferenceArrayTypeAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getArrayTypeAccess().getInnerTypeTypeCrossReference_0_1_0());
					}
					ruleSimpleTypeName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0_2());
			}
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArrayTypeAccess().getContainmentArrayTypeAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayTypeAccess().getInnerTypeNullableTypeParserRuleCall_1_1_0());
					}
					lv_innerType_5_0=ruleNullableType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayTypeRule());
						}
						set(
							$current,
							"innerType",
							lv_innerType_5_0,
							"soal.dsl.SoalDsl.NullableType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1_2());
			}
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleNullableType
entryRuleNullableType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullableTypeRule()); }
	iv_ruleNullableType=ruleNullableType
	{ $current=$iv_ruleNullableType.current; }
	EOF;

// Rule NullableType
ruleNullableType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNullableTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getNullableTypeAccess().getInnerTypeTypeCrossReference_0_0());
				}
				ruleSimpleTypeName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='?'
		{
			newLeafNode(otherlv_1, grammarAccess.getNullableTypeAccess().getQuestionMarkKeyword_1());
		}
	)
;

// Entry rule entryRuleSimpleTypeReference
entryRuleSimpleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeReferenceRule()); }
	iv_ruleSimpleTypeReference=ruleSimpleTypeReference
	{ $current=$iv_ruleSimpleTypeReference.current; }
	EOF;

// Rule SimpleTypeReference
ruleSimpleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSimpleTypeReferenceRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getSimpleTypeReferenceAccess().getReferencedTypeTypeCrossReference_0());
			}
			ruleSimpleTypeName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSimpleTypeName
entryRuleSimpleTypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeNameRule()); }
	iv_ruleSimpleTypeName=ruleSimpleTypeName
	{ $current=$iv_ruleSimpleTypeName.current.getText(); }
	EOF;

// Rule SimpleTypeName
ruleSimpleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='object'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getObjectKeyword_0());
		}
		    |
		kw='binary'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getBinaryKeyword_1());
		}
		    |
		kw='bool'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getBoolKeyword_2());
		}
		    |
		kw='string'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getStringKeyword_3());
		}
		    |
		kw='int'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getIntKeyword_4());
		}
		    |
		kw='long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getLongKeyword_5());
		}
		    |
		kw='float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getFloatKeyword_6());
		}
		    |
		kw='double'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getDoubleKeyword_7());
		}
		    |
		kw='date'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getDateKeyword_8());
		}
		    |
		kw='time'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getTimeKeyword_9());
		}
		    |
		kw='datetime'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getDatetimeKeyword_10());
		}
		    |
		kw='duration'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSimpleTypeNameAccess().getDurationKeyword_11());
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleTypeNameAccess().getQualifiedNameParserRuleCall_12());
		}
		this_QualifiedName_12=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_12);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule RestBindingKind
ruleRestBindingKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='REST'
		{
			$current = grammarAccess.getRestBindingKindAccess().getRESTEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getRestBindingKindAccess().getRESTEnumLiteralDeclaration());
		}
	)
;

// Rule SoapBindingKind
ruleSoapBindingKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='SOAP'
		{
			$current = grammarAccess.getSoapBindingKindAccess().getSOAPEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getSoapBindingKindAccess().getSOAPEnumLiteralDeclaration());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
